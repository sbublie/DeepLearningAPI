openapi: 3.0.3
info:
  contact:
    name: Sebastian Bublies
  description: An API for accessing Deep Learning data
  title: Deep Learning API
  version: 0.0.1
servers:
- url: http://localhost:8080
paths:
  /validation/batches:
    get:
      operationId: validation_batches_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Batch'
                type: array
          description: A list of available batches
      tags:
      - Validation Pipeline
      x-openapi-router-controller: openapi_server.controllers.validation_pipeline_controller
  /validation/batches/{batch-name}/classes:
    get:
      operationId: validation_batches_batch_name_classes_get
      parameters:
      - description: Name of batch
        explode: false
        in: path
        name: batch-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Class'
                type: array
          description: A list of all classes tested in a batch
      tags:
      - Validation Pipeline
      x-openapi-router-controller: openapi_server.controllers.validation_pipeline_controller
  /validation/models:
    get:
      operationId: validation_models_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: A list of available models
      tags:
      - Validation Pipeline
      x-openapi-router-controller: openapi_server.controllers.validation_pipeline_controller
  /validation/models/{model-name}:
    get:
      operationId: validation_models_model_name_get
      parameters:
      - description: Name of model
        explode: false
        in: path
        name: model-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Meta data of a specific model
      tags:
      - Validation Pipeline
      x-openapi-router-controller: openapi_server.controllers.validation_pipeline_controller
  /validation/models/{model-name}/{batch-name}/result:
    get:
      operationId: validation_models_model_name_batch_name_result_get
      parameters:
      - description: Name of model
        explode: false
        in: path
        name: model-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of batch
        explode: false
        in: path
        name: batch-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
          description: Result data of a model
      tags:
      - Validation Pipeline
      x-openapi-router-controller: openapi_server.controllers.validation_pipeline_controller
  /validation/models/{model-name}/{batch-name}/result/ground-truth:
    get:
      operationId: validation_models_model_name_batch_name_result_ground_truth_get
      parameters:
      - description: Name of model
        explode: false
        in: path
        name: model-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of batch
        explode: false
        in: path
        name: batch-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroundTruthResult'
                type: array
          description: Ground truth data of a model
      tags:
      - Validation Pipeline
      x-openapi-router-controller: openapi_server.controllers.validation_pipeline_controller
  /validation/models/{model-name}/{batch-name}/result/predictions:
    get:
      operationId: validation_models_model_name_batch_name_result_predictions_get
      parameters:
      - description: Name of model
        explode: false
        in: path
        name: model-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of batch
        explode: false
        in: path
        name: batch-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PredictionResult'
                type: array
          description: Prediction data of a model
      tags:
      - Validation Pipeline
      x-openapi-router-controller: openapi_server.controllers.validation_pipeline_controller
  /validation/status:
    get:
      operationId: validation_status_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Status'
                type: array
          description: Status of all validation data
      tags:
      - Validation Pipeline
      x-openapi-router-controller: openapi_server.controllers.validation_pipeline_controller
components:
  schemas:
    Class:
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      title: Class
      type: object
    Model:
      example:
        name: name
        time: time
      properties:
        name:
          title: name
          type: string
        time:
          title: time
          type: string
      title: Model
      type: object
    Status:
      example:
        warning: true
        message: message
      properties:
        warning:
          title: warning
          type: boolean
        message:
          title: message
          type: string
      title: Status
      type: object
    Batch:
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      title: Batch
      type: object
    PredictionResult:
      example:
        prediction: 0
      properties:
        prediction:
          format: int32
          title: prediction
          type: integer
      title: PredictionResult
      type: object
    GroundTruthResult:
      example:
        ground_truth: 0
      properties:
        ground_truth:
          format: int32
          title: ground_truth
          type: integer
      title: GroundTruthResult
      type: object
    ValidationResult:
      example:
        accuracy: 0
      properties:
        accuracy:
          format: int32
          title: accuracy
          type: integer
      title: ValidationResult
      type: object
